
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2021, Perry L Miller IV
//  All rights reserved.
//  MIT License: https://opensource.org/licenses/mit-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base class for all scene primitives.
//
///////////////////////////////////////////////////////////////////////////////

#include "GSG/Scene/Primitives/PrimitiveSet.h"

#include "Usul/Tools/NoThrow.h"

#include <functional>


namespace GSG {
namespace Scene {
namespace Primitives {


// Add the boilerplate code.
GSG_IMPLEMENT_PRIMITIVE_CLASS ( PrimitiveSet )


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

PrimitiveSet::PrimitiveSet() : BaseClass()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

PrimitiveSet::~PrimitiveSet()
{
  USUL_TOOLS_NO_THROW ( 1608537072, std::bind ( &PrimitiveSet::_destroyPrimitiveSet, this ) );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destroy this instance.
//
///////////////////////////////////////////////////////////////////////////////

void PrimitiveSet::_destroyPrimitiveSet()
{
}


} // namespace Primitives
} // namespace Scene
} // namespace GSG
