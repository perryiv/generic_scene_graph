
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2021, Perry L Miller IV
//  All rights reserved.
//  MIT License: https://opensource.org/licenses/mit-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  A layer in the render-tree.
//  The depth buffer should be cleared before rendering its children.
//
///////////////////////////////////////////////////////////////////////////////

#include "GSG/Tools/Tree/Layer.h"

#include "Usul/Tools/NoThrow.h"

#include <functional>


namespace GSG {
namespace Tools {
namespace Tree {


// Add the boilerplate code.
GSG_IMPLEMENT_OBJECT_CLASS ( Layer )


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Layer::Layer() : BaseClass()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Layer::~Layer()
{
  USUL_TOOLS_NO_THROW ( 1626111563, std::bind ( &Layer::_destroyLayer, this ) );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destroy this instance.
//
///////////////////////////////////////////////////////////////////////////////

void Layer::_destroyLayer()
{
}


} // namespace Tree
} // namespace Tools
} // namespace GSG
